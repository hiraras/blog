(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{321:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"grid-网格布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grid-网格布局"}},[t._v("#")]),t._v(" grid 网格布局")]),t._v(" "),a("h3",{attrs:{id:"设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#设置"}},[t._v("#")]),t._v(" 设置")]),t._v(" "),a("ul",[a("li",[t._v("display: grid;")]),t._v(" "),a("li",[t._v("display: inline-grid;")])]),t._v(" "),a("h3",{attrs:{id:"相关属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关属性"}},[t._v("#")]),t._v(" 相关属性")]),t._v(" "),a("ol",[a("li",[t._v("grid-template-columns & grid-template-rows")])]),t._v(" "),a("ul",[a("li",[t._v("grid-template-columns: [line-name] <track-size> [line-name] <track-size> [line-name] <track-size>...[line-name]")]),t._v(" "),a("li",[t._v("line-name: 线的名字，方便后边引用，使用时需带上[]；一条线可以使用多个名字，可以在[]内以空格隔开；可以省略")]),t._v(" "),a("li",[t._v("track-size: 相邻两条线的距离，可以是长度、%、fr（相当于 flex 的比例）、auto（类似 1fr）；不可以省略")]),t._v(" "),a("li",[t._v('track-size 还可以使用一些特殊"函数":')]),t._v(" "),a("li",[t._v("repeat: repeat(3, 20px) === 20px 20px 20px;")]),t._v(" "),a("li",[t._v("auto-fill: 当不知道容器大小的时候，不知道填写多少数量时可以使用，会自动填充满;")]),t._v(" "),a("li",[t._v("repeat(auto-fill, 100px): 以 100px 的间隔填充网格")]),t._v(" "),a("li",[t._v("minmax(minvalue, maxvalue): 表示长度在这范围之内，当和 auto-fill 一起使用时，auto-fill 会取尽可能大，即长度会尽可能小")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("grid-template-areas: 可以为每个格子命名，这样使用:")])]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".container")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" grid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-columns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("repeat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-rows")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" auto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("grid-template-areas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"header header header header"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main main . sidebar"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"footer footer footer footer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("p",[t._v("也展示出了 areas 属性可以影响 rows，当设置 rows 为 auto 时，能够根据子元素排列渲染不同列数；")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v(".")]),t._v(" 可以表示一个无名格子")])]),t._v(" "),a("li",[a("p",[t._v("只要子元素引用的 area 在 areas 里合乎逻辑就能够正常渲染，否则不会渲染")])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("grid-area:\n子元素通过这个属性设定位置、大小")])]),t._v(" "),a("li",[a("p",[t._v("column-gap、row-gap、gap:")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("设置格子之间的间距，可以理解为行、列的宽度，但是子元素跨越多个单元格的话不会被切分")])]),t._v(" "),a("li",[a("p",[t._v("gap 是前两个的合并 gap: <row-gap> <column-gap>;")])]),t._v(" "),a("li",[a("p",[t._v("如果省略第 2 个则认为行和列一样")])])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("justify-items、align-items、place-items:")])]),t._v(" "),a("ul",[a("li",[t._v("可以取 start、end、center、stretch；设定每个 item(不是每个 item 内的元素，grid 只对子元素有效)在网格的对其方式")])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[t._v("justify-content、align-content、place-content:")])]),t._v(" "),a("ul",[a("li",[t._v("可以取 start、end、center、stretch、space-around、space-between、space-evenly；")]),t._v(" "),a("li",[t._v("当子容器的大小小于当前容器时，可以设置每行/列在整个容器内的分布方式")])]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[t._v("grid-auto-columns、grid-auto-rows:")])]),t._v(" "),a("ul",[a("li",[t._v("当网格中的网格项多余单元格，或被置于网格之外时，会自动创建格子来满足要求。可以用这两个属性指定隐式的格子的大小")])]),t._v(" "),a("ol",{attrs:{start:"8"}},[a("li",[t._v("grid-auto-flow: 控制自动放置算法的工作方式，")])]),t._v(" "),a("ul",[a("li",[t._v("row:默认，先填满行，当项目超出就换行;")]),t._v(" "),a("li",[t._v("columns:先填满列，当项目超出就换列;")]),t._v(" "),a("li",[t._v("row dense: 以行排列，可能会出现缺口，如果后面的项目有能填补空缺的，就填上;")]),t._v(" "),a("li",[t._v("column dense: 同 row dense;")])]),t._v(" "),a("ol",{attrs:{start:"9"}},[a("li",[a("p",[t._v("grid-column-end: 属性项目将横跨多少列，或者项目会在哪条列线")])]),t._v(" "),a("li",[a("p",[t._v("grid-row-end: 属性项目将横跨多少行，或者项目会在那条横线")])]),t._v(" "),a("li",[a("p",[t._v("grid-column-start： 列坐标")])]),t._v(" "),a("li",[a("p",[t._v("grid-row-start：行坐标")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);