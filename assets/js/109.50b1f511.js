(window.webpackJsonp=window.webpackJsonp||[]).push([[109],{380:function(e,r,t){"use strict";t.r(r);var s=t(14),o=Object(s.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"csrf-跨站请求伪造-cross-site-request-forgery"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csrf-跨站请求伪造-cross-site-request-forgery"}},[e._v("#")]),e._v(" CSRF 跨站请求伪造（Cross Site Request Forgery）")]),e._v(" "),r("h3",{attrs:{id:"描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#描述"}},[e._v("#")]),e._v(" 描述")]),e._v(" "),r("p",[e._v("网站发出请求时会自动带上对应请求的域名下 cookie，黑客利用这个特性，在自己的网站设置第三方网站的请求，然后诱导目标访问自己的网站。如果此时用户的 cookie 信息还有效，那么伪造的请求就会以用户的名义发出，以达到黑客的一些目的")]),e._v(" "),r("h3",{attrs:{id:"防御方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#防御方式"}},[e._v("#")]),e._v(" 防御方式")]),e._v(" "),r("ol",[r("li",[e._v("referer 字段验证：请求头中存在 referer 字段，表示请求的发起源，如果收到的源与想要的不一致，就认为它是非法的；但是它有局限性，一些浏览器可能可以修改 referer 字段")]),e._v(" "),r("li",[e._v("token 验证：服务端生成 token 并返回，用户在 session 中保存，当请求时再 header 中带上 token 字段，服务端验证 token 有效性")])])])}),[],!1,null,null,null);r.default=o.exports}}]);