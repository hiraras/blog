(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{299:function(t,s,a){"use strict";a.r(s);var r=a(14),e=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收机制"}},[t._v("#")]),t._v(" 垃圾回收机制")]),t._v(" "),s("p",[t._v("垃圾回收就是不定时扫描程序，将使用过后用不到的对象的内存地址释放，不让程序占用内存无限累加的机制")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("引用计数法")])])]),t._v(" "),s("p",[t._v("会对一个对象被引用的次数进行记录，当一个对象引用次数为 0 则回收掉")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用次数为1")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用次数为2")]),t._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引用次数为1")]),t._v("\n")])])]),s("ul",[s("li",[t._v("优点：很清晰，很好理解")]),t._v(" "),s("li",[t._v("缺点：如果两个对象有循环引用的关系则永远不会被清除")])]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[s("strong",[t._v("标记清除")])]),t._v(" "),s("ol",[s("li",[t._v("将代码内所有对象假定为可以清除的，标记为 0")]),t._v(" "),s("li",[t._v("将从根对象开始遍历，将还有用到的对象标记为 1")]),t._v(" "),s("li",[t._v("清除所有标记为 0 的对象")])])])]),t._v(" "),s("ul",[s("li",[t._v("优点：实现比较简单")]),t._v(" "),s("li",[t._v("缺点：原来连续存储在内存中的对象，经过清除后各对象的地址不会变化，就会造成一系列有空缺的内存地址。后续有新的对象被创建时就需要在内存中找到足够大的空间来存放新对象，扫描过程需要时间造成浪费")])]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("strong",[t._v("对 2 的优化整理标记算法")])])]),t._v(" "),s("p",[t._v("过程和 2 差不多，就是在最后会整理出现的内存空隙")])])}),[],!1,null,null,null);s.default=e.exports}}]);