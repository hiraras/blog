(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{350:function(v,_,t){"use strict";t.r(_);var l=t(14),p=Object(l.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("p",[v._v("输入网址并进入后发生了什么？")]),v._v(" "),_("ol",[_("li",[v._v("使用 DNS 域名解析，找到对应服务器 IP")]),v._v(" "),_("li",[v._v("发起 TCP（传输连接协议）三次握手建立连接")]),v._v(" "),_("li",[v._v("建立 tcp 连接后发起请求（端口路径、请求参数等）")]),v._v(" "),_("li",[v._v("服务器响应 http 请求，返回 html 信息")]),v._v(" "),_("li",[v._v("浏览器解析 html 代码，并请求相关 css、js 和图片资源")]),v._v(" "),_("li",[v._v("生成 dom 树、css 树，然后合并成 render 树并渲染页面")]),v._v(" "),_("li",[v._v("释放连接（4 次挥手）")])]),v._v(" "),_("p",[v._v("3 次握手？")]),v._v(" "),_("p",[v._v("作用：确保双方的接收能力和发送能力的正常")]),v._v(" "),_("ol",[_("li",[v._v("客户端：你听的到吗？")]),v._v(" "),_("li",[v._v("服务端：听得到，那你听得到我吗？")]),v._v(" "),_("li",[v._v("客户端：我也听得到")])]),v._v(" "),_("p",[v._v("4 次挥手？")]),v._v(" "),_("ol",[_("li",[v._v("客户端：我没有数据发给你了，你如果还有数据，就继续发吧")]),v._v(" "),_("li",[v._v("服务端：我知道了，我发完了告诉你")]),v._v(" "),_("li",[v._v("服务端：我发完了，你可以关了")]),v._v(" "),_("li",[v._v("客户端：知道了，我断开了，可以确认断开了，不用再回了")])]),v._v(" "),_("p",[v._v("TCP 连接和 HTTP 请求之间的联系？")]),v._v(" "),_("ol",[_("li",[v._v("HTTP 是比 TCP 更高层次的应用层协议，根据规则，只有低层协议建立后，才能进行更高层协议的连接，因此首先要建立 TCP 连接")]),v._v(" "),_("li",[v._v("一个 TCP 连接可以发送多个 HTTP 请求，可保持 TCP 连接，一个 TCP 连接中 HTTP 请求依次发送")])]),v._v(" "),_("p",[v._v("浏览器是如何提高页面加载效率的？")]),v._v(" "),_("ol",[_("li",[v._v("维持和服务器已经建立的 TCP 连接，在同一连接上顺序处理多个请求")]),v._v(" "),_("li",[v._v("和服务器建立多个 TCP 连接")])]),v._v(" "),_("p",[v._v("https：超文本传输安全协议，是以安全为目标的 HTTP 通道")]),v._v(" "),_("p",[v._v("为什么要用 https？")]),v._v(" "),_("p",[v._v("因为 http 不安全（DNS 欺骗，ARP 欺骗）：在 HTTP 协议通过请求/响应的方式，在客户端和服务器之间进行通信，他们之间没有任何身份确认的过程，数据全部明文传输（报文不是二进制而是文本），所以很容易被攻击、窃取、替换、修改")]),v._v(" "),_("p",[v._v("ARP（将 IP 地址映射成物理地址）欺骗：当收到 ARP 应答包后，不会去验证自己是否向对方主机发送过 ARP 请求包，就直接把这个返回包中的 IP 地址与 MAC 地址的对应关系保存到 ARP 缓存表中，如果原有相同 IP 对应关系，则原有的会被替换")]),v._v(" "),_("p",[v._v("预防措施：")]),v._v(" "),_("ol",[_("li",[v._v("在主机上静态绑定 MAC 地址")]),v._v(" "),_("li",[v._v("在主机上设置 ARP 防火墙")]),v._v(" "),_("li",[v._v("利用交换机的防 ARP 欺骗技术，如 DAI")])]),v._v(" "),_("p",[v._v("DNS（域名解析成对应 IP）欺骗：首先欺骗着向目标机器发送构造好的 ARP 应答数据包，ARP 欺骗成功后，嗅探到对方发出的 DNS 请求数据包，分析数据包取的 ID 和端口号后，向目标发送自己构造好的一个 DNS 返回包，对方收到 DNS 应答包后，发现 ID 和端口号全部正确，即把返回数据包中的域名和对应的 IP 地址保存进 DNS 缓存表中，而后来的真实的 DNS 应答包返回时则被丢弃")]),v._v(" "),_("p",[v._v("防御措施：")]),v._v(" "),_("ol",[_("li",[v._v("有效防止 DNS 欺骗攻击的方法就是禁用 VPS 服务器 DNS 缓存")]),v._v(" "),_("li",[v._v("保护内部设备、不要过分依赖 DNS，定时检查服务器安全以及使用 DNSSEC 替代 DNS 等")])]),v._v(" "),_("p",[v._v("https 加密算法（方式）？")]),v._v(" "),_("ol",[_("li",[v._v("对称加密")])]),v._v(" "),_("p",[v._v("单密钥加密：共用一个密钥来对消息进行加密解密，客户端和服务器约好一个加密的密钥，然后通过密钥对信息进行加密，然后传输，然后解密")]),v._v(" "),_("p",[v._v("常见对称算法：DES、AES")]),v._v(" "),_("ol",{attrs:{start:"2"}},[_("li",[v._v("非对称加密")])]),v._v(" "),_("p",[v._v("加密使用的是不同的密钥，所以是非对称：")]),v._v(" "),_("ol",[_("li",[v._v("A 生成一对密钥，一公一私，发送公钥 1 给 B")]),v._v(" "),_("li",[v._v("B 先生成一个密钥 2，使用公钥 1 对密钥 2 进行加密")]),v._v(" "),_("li",[v._v("A 使用密钥解开公钥 1，然后就有了 B 的密钥 2，就可以使用密钥 2 进行加密通信了")])]),v._v(" "),_("p",[v._v("常见非对称加密算法：RSA、DSA")]),v._v(" "),_("ol",{attrs:{start:"3"}},[_("li",[v._v("数字证书和数字签名")])]),v._v(" "),_("p",[v._v("为了解决公钥来源的不安全性，引入第三方数字证书认证中心")]),v._v(" "),_("ol",{attrs:{start:"4"}},[_("li",[v._v("单向加密算法（MD5）")])]),v._v(" "),_("p",[v._v("只能单向对明文进行加密，而不能逆向通过密文得到明文。")]),v._v(" "),_("p",[v._v("https 是什么？")]),v._v(" "),_("p",[v._v("https 是将加密算法整合，达到性能和安全的最大化")]),v._v(" "),_("p",[v._v("HTTP + 加密 + 认证 + 完整性保护 = HTTPS")]),v._v(" "),_("p",[v._v("HTTP + SSL = HTTPS")]),v._v(" "),_("p",[v._v("https 使用：提供了消息安全传输通道，但每次消息的加解密十分耗时，然后购买整数也很贵，在一些要求较高的场景下（银行、购物系统），是有必要使用的，安全性要求不高的场景下，其实没必要使用")]),v._v(" "),_("p",[v._v("https 的缺点？")]),v._v(" "),_("ol",[_("li",[v._v("https 握手阶段比较费时，会是页面加载时间延长 50%，增加 10%~20%的耗电")]),v._v(" "),_("li",[v._v("https 缓存不如 http 高效，会增加数据开销")]),v._v(" "),_("li",[v._v("SSL 证书也需要钱，功能越强大的证书费用越高")]),v._v(" "),_("li",[v._v("SSL 证书需要绑定 IP，不能在同一个 IP 上绑定多个域名，ipv4 资源支持不了这种消耗")])]),v._v(" "),_("p",[v._v("http 和 https 区别？")]),v._v(" "),_("ol",[_("li",[v._v("端口不同，http 协议的默认端口为 80，https 的默认端口为 443")]),v._v(" "),_("li",[v._v("安全性和资源消耗：http 协议运行在 tcp 之上，所有传输内容都是明文，客户端和服务端都无法验证对方身份。https 是运行在 ssl/tls 之上的 http 协议，ssl/tls 运行在 tcp 之上，所有传输内容都经过加密，加密采用对称加密，但对称加密的密钥用服务器方的证书进行了非对称加密，所以说 http 安全性没有 https 高，但 https 更耗费服务器资源")])]),v._v(" "),_("p",[v._v("get 和 post 主要区别？")]),v._v(" "),_("ol",[_("li",[v._v("get 请求参数拼接在 url 上，post 请求参数在 body 中")]),v._v(" "),_("li",[v._v("get 请求后退/刷新无害，post 会导致重新提交数据")]),v._v(" "),_("li",[v._v("get 对数据长度有限制（并不是 http 的限制，而是浏览器的限制），限制 2048 个字符，post 无限制")]),v._v(" "),_("li",[v._v("get 只允许 ASCII 字符，post 没有限制")])])])}),[],!1,null,null,null);_.default=p.exports}}]);