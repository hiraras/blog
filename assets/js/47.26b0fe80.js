(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{320:function(l,e,t){"use strict";t.r(e);var s=t(14),a=Object(s.a)({},(function(){var l=this,e=l._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[e("h2",{attrs:{id:"flex-弹性布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flex-弹性布局"}},[l._v("#")]),l._v(" flex 弹性布局")]),l._v(" "),e("p",[l._v("flex-grow: 有剩余空间时，元素按比例分配，默认值为 0，即默认不扩展")]),l._v(" "),e("p",[l._v("flex-shrink: 空间不够时，元素变窄的比例，默认值为 1，即默认缩小")]),l._v(" "),e("p",[l._v("flex-basis:\n当方向轴上有剩余空间时，项目所占大小，默认为 auto，此时相当于没有；\n如果 flex-grow 为 1，且兄弟元素也有 flex-grow 为 1 的元素，则 flex-basis 会共同作用，结果是元素宽度大于 flex-basis;")]),l._v(" "),e("p",[l._v("flex: 为 flex-grow flex-shrink flex-basis 的简写")]),l._v(" "),e("ul",[e("li",[l._v("auto:1 1 auto")]),l._v(" "),e("li",[l._v("1:1 1 0%")]),l._v(" "),e("li",[l._v("2:2 1 0%")]),l._v(" "),e("li",[l._v("none:0 0 auto")])])])}),[],!1,null,null,null);e.default=a.exports}}]);